<?xml version="1.0"?>
<launch>
    <!-- arguments -->
    <arg name="paused" default="false"/>
    <arg name="load_description" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="robot_namespace" default="panda"/>
    <arg name="gui" default="false"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="robot_ip" default="192.168.200.3"/>
    <arg name="start_moveit" default="false"/>
    <arg name="load_gripper" default="false"/>
    <arg name="controllers" default="franka_state_controller position_joint_trajectory_controller"/>
    
<!-- Launch GAZEBO with own world configuration -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <rosparam command="load" file="$(find panda_table_launch)/config/controllers.yaml" ns="$(arg robot_namespace)" />
    <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" ns="$(arg robot_namespace)" />
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find franka_control)/config/panda_gazebo_control.yaml" command="load"/>
    <rosparam file="$(find force_controllers)/config/panda_impedance.yaml" command="load"/>

    <group ns="$(arg robot_namespace)">
        <!-- Load robot description from xacro file -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find panda_table_description)/urdf/panda_table.urdf.xacro load_gripper:=$(arg load_gripper)"/>

        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
	      args="-param robot_description -urdf -model panda -J panda_joint1 0.0 -J panda_joint2 -0.8 -J panda_joint3 0.0 -J panda_joint4 -2.8 -J panda_joint5 0.0 -J panda_joint6 1.8 -J panda_joint7 0.8"/>


        <!-- Load the controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="$(arg controllers)" /> 

        <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
            <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" />
            <param name="robot_ip" value="$(arg robot_ip)" />
        </node>


        <!-- Convert joint states to TF transforms for rviz, etc -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
            <!-- <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam> -->
        </node>

      <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
        <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
        <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
        <param name="rate" value="50"/>
     </node>
    </group>

    <!-- Custom console config for dubugging messages -->
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find panda_insertion)/config/custom_rosconsole.conf"/>

    <!-- Nodes -->
    <node name="insertion" pkg="panda_insertion" type="insertion" output="screen">
        <param name="jointTrajectoryTopic" type="str" value="panda/position_joint_trajectory_controller/command"/>
        <param name="equilibriumPoseTopic" type="str" value="impedance_controller/equilibrium_pose"/>

        <param name="loadControllerService" type="str" value="panda/controller_manager/load_controller"/>
        <param name="switchControllerService" type="str" value="panda/controller_manager/switch_controller"/>

        <param name="impedanceController" type="str" value="impedance_controller"/>
        <param name="positionJointTrajectoryController" type="str" value="panda/position_joint_trajectory_controller"/>

        <param name="x_goal" type="double" value="0.0"/>
        <param name="y_goal" type="double" value="0.0"/>
        <param name="z_goal" type="double" value="0.9"/>
    </node>
</launch>
