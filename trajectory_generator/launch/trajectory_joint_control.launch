<?xml version="1.0"?>
<launch>

  <arg name="start_arm" default="true"/>
  <arg name="load_description" default="true"/>
  <arg name="robot_namespace" default="panda"/>
  <arg name="load_gripper" default="false"/>
  <arg name="robot_ip" default="192.168.200.3"/>
  <!-- <arg name="controllers" default="position_joint_trajectory_controller"/> -->
  <!-- <arg name="controllers" default="franka_state_controller position_joint_trajectory_controller"/> -->
  <arg name="rviz" default="false"/>

  <!-- <rosparam command="load" file="$(find panda_table_launch)/config/controllers.yaml" ns="$(arg robot_namespace)" />
  <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" ns="$(arg robot_namespace)" /> -->

  <!--    arm specific launch      -->
  <group ns="$(arg robot_namespace)" if="$(arg start_arm)">
     <param name="robot_description" if="$(arg load_description)" 
	    command="$(find xacro)/xacro --inorder '$(find panda_table_description)/urdf/panda_table.urdf.xacro' load_gripper:=$(arg load_gripper)"/>

     <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
     
     <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="$(arg controllers)" /> -->
     <!-- <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
        <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" />
        <param name="robot_ip" value="$(arg robot_ip)" />
     </node> -->
     
     <!-- <include file="$(find franka_gripper)/launch/franka_gripper.launch" if="$(arg load_gripper)">
        <arg name="robot_ip" value="$(arg robot_ip)" />
     </include> -->

     <!-- <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
        <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
        <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
        <param name="rate" value="300"/>
     </node> -->
     
     <!-- <node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
        <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired, franka_gripper/joint_states] </rosparam>
        <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states_desired] </rosparam>
        <param name="rate" value="30"/>
        <remap from="/joint_states" to="/joint_states_desired" />
    </node> -->

    <node name="trajectory_safety_check_server" type="trajectory_safety_check_server" pkg="trajectory_generator" output="screen">
      <param name="z_lower_limit" value="0.85800"/>
      <!-- <param name="z_lower_limit" value="0.86000"/> -->
      <param name="z_upper_limit" value="0.86600"/>
      <param name="y_lower_limit" value="-0.28"/>
      <param name="y_upper_limit" value="-0.15"/>
    </node>

     <!-- enabled only if we want to run moveit in simulation -->
  </group>

  <!-- <node name="rviz" pkg="rviz" type="rviz" if="$(arg rviz)"/> -->

</launch>
